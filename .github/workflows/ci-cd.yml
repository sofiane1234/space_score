name: CI/CD Pipeline

on:
  push:
    # beta à chaque commit sur main, stable à chaque tag v*
    branches: [ "main" ]
    tags:     [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-and-test:
    name: Build & Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Créer requirements.txt temporaire
        run: |
          echo "pygame" >> requirements.txt
          echo "pytest" >> requirements.txt

      - name: Installer les dépendances
        run: pip install -r requirements.txt

      - name: Ajouter le chemin source
        run: echo "PYTHONPATH=$PWD/src" >> $GITHUB_ENV

      - name: Lancer les tests unitaires
        run: pytest src/tests/

  deploy:
    name: Deploy itch.io (beta / stable)
    needs: build-and-test
    runs-on: windows-latest
    strategy:
      matrix:
        channel: [ "beta", "stable" ]

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Installer PyInstaller & pygame
        run: pip install pyinstaller pygame

      - name: Générer VERSION
        shell: bash
        run: echo "VERSION=$(date +'%Y.%m.%d.%H%M')" >> $GITHUB_ENV

      - name: Build Windows executable
        shell: bash
        run: |
          pyinstaller src/main.py \
            --onefile \
            --noconsole \
            --name space_score \
            --add-data "src/assets;assets"

      - name: Copier src dans dist
        shell: powershell
        run: copy -Recurse src dist/src

      - name: Smoke test
        shell: powershell
        run: |
          Start-Process dist/space_score.exe -Wait
          Write-Host "Smoke test passed"

      - name: Télécharger et configurer Butler
        shell: powershell
        run: |
          iwr -useb https://broth.itch.ovh/butler/windows-amd64/LATEST/archive/default `
            -OutFile butler.zip
          Expand-Archive butler.zip -DestinationPath butler

      - name: Push vers itch.io
        if: >
          (matrix.channel == 'beta'  && github.ref == 'refs/heads/main') ||
          (matrix.channel == 'stable' && startsWith(github.ref, 'refs/tags/v'))
        shell: powershell
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: .\butler\butler.exe push dist/ sossof/space-score:${{ matrix.channel }}-${{ env.VERSION }}

      - name: Génération du journal de version
        if: >
          (matrix.channel == 'beta'  && github.ref == 'refs/heads/main') ||
          (matrix.channel == 'stable' && startsWith(github.ref, 'refs/tags/v'))
        shell: bash
        run: echo "Version -> ${{ matrix.channel }}-${{ env.VERSION }}" > dist/version.txt

      - name: Créer un ticket de feedback
        if: matrix.channel == 'beta'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "Feedback version beta-${{ env.VERSION }}"
          content-filepath: .github/feedback_template.md
          labels: feedback,beta
